/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package observerpattern.view;

import java.awt.Graphics;
import observerpattern.model.stats.framework.DSStatDictionary;
import observerpattern.model.stats.framework.DSStatDetails;
import observerpattern.model.stats.framework.DSStat;
import observerpattern.model.stats.derived.DSDnDStatContainer;

import javax.swing.DefaultComboBoxModel;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Set;
import java.util.List;

/**
 *
 * @author KeithW
 */
public class DSStatHelperView extends javax.swing.JPanel {

    private DefaultComboBoxModel<DSStatDetails> modelStats;
    private DefaultComboBoxModel<String> modelCategories;
    private DSDnDStatContainer player;

    /**
     * Creates new form DSStatHelperView
     */
    public DSStatHelperView() {
        initComponents();

        modelStats = new DefaultComboBoxModel();
        modelCategories = new DefaultComboBoxModel();

        this.jComboStats.setModel(modelStats);
        this.jComboCategories.setModel(modelCategories);

    }

    public void setModel(DSDnDStatContainer player) {
        this.player = player;
    }

    public void initialise() {

        
        // Load up the categories combo box
        Set<String> categories = DSStatDictionary.getCategories();
        this.modelCategories.removeAllElements();

        for (String sCategory : categories) {
            this.modelCategories.addElement(sCategory);
        }

        // Select the 1st category in the list
        this.jComboCategories.setSelectedIndex(0);

    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        DSStatDetails selected = (DSStatDetails) this.modelStats.getSelectedItem();

        if (this.player != null) {
            DSStat stat = player.getStat(selected.getName());
            if (stat != null) {
                this.jLabelCurrentValue.setText(Integer.toString(stat.getValue().intValue()));
            } else {
                this.jLabelCurrentValue.setText("Not value set");
            }
        } else {
            this.jLabelCurrentValue.setText("Not character set");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboCategories = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jComboStats = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jLabelCalculation = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelCategory = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelCurrentValue = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Category : ");

        jComboCategories.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboCategories.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboCategoriesItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Stat : ");

        jComboStats.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboStats.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboStatsItemStateChanged(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Name : ");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Description : ");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Calculation : ");

        jLabelName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelName.setText("jLabel6");

        jLabelDescription.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDescription.setText("jLabel6");
        jLabelDescription.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelDescription.setFocusable(false);
        jLabelDescription.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabelCalculation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelCalculation.setText("jLabel6");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Category : ");

        jLabelCategory.setText("jLabel7");

        jLabel7.setText("Current Value : ");

        jLabelCurrentValue.setText("jLabel8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelCurrentValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(607, 607, 607))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCalculation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboStats, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(637, 637, 637))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboStats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelName)
                    .addComponent(jLabel6)
                    .addComponent(jLabelCategory)
                    .addComponent(jLabel7)
                    .addComponent(jLabelCurrentValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelCalculation))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboStatsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboStatsItemStateChanged
        // TODO add your handling code here:

        if (this.modelStats.getSelectedItem() == null) {
            return;
        }

        DSStatDetails selected = (DSStatDetails) this.modelStats.getSelectedItem();

        this.jLabelName.setText(selected.getDisplayName());
        this.jLabelDescription.setText("<html><p>" + selected.getDescription() + "</p></html>");
        //this.jLabelDescription.setText(selected.getDescription());
        this.jLabelCalculation.setText(selected.getCalculation());
        this.jLabelCategory.setText(selected.getCategory());

        if (this.player != null) {
            DSStat stat = player.getStat(selected.getName());
            if (stat != null) {
                this.jLabelCurrentValue.setText(Integer.toString(stat.getValue().intValue()));
            } else {
                this.jLabelCurrentValue.setText("Not value set");
            }
        } else {
            this.jLabelCurrentValue.setText("Not character set");
        }


    }//GEN-LAST:event_jComboStatsItemStateChanged

    private void jComboCategoriesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboCategoriesItemStateChanged
        // TODO add your handling code here:
        String sCategory = (String) this.modelCategories.getSelectedItem();

        List<DSStatDetails> setStats = DSStatDictionary.getStatsByCategory(sCategory);

        this.modelStats.removeAllElements();

        for (DSStatDetails stat : setStats) {
            this.modelStats.addElement(stat);
        }

        this.jComboStats.setSelectedIndex(0);

    }//GEN-LAST:event_jComboCategoriesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboCategories;
    private javax.swing.JComboBox jComboStats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelCalculation;
    private javax.swing.JLabel jLabelCategory;
    private javax.swing.JLabel jLabelCurrentValue;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelName;
    // End of variables declaration//GEN-END:variables
}
